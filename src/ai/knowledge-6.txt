import React, { useEffect, useRef, useState } from "react";
// import 'bootstrap/dist/css/bootstrap.min.css';
import "katex/dist/katex.min.css";
import '../style/knowledge_6.css';
import { InlineMath } from 'react-katex';
import { DragDropContext, Droppable, Draggable } from "@hello-pangea/dnd";
import Swal from "sweetalert2";
import ScrollTop from "../components/scroll";
import Sidebar from "../components/sidebar";
import Footer from "../components/footer";

const Knowledge06 = () => {
    const ggbSinRef = useRef(null);
    const ggbCosRef = useRef(null);
    const ggbCompareRef = useRef(null);
    const ggbFunctionRef = useRef(null);
    const ggbTryRef = useRef(null);
    const ggbTestref = useRef(null);
    const ggbGraphRef = useRef(null);
    const ggbTanRef = useState(null);
    const ggbCosecRef = useState(null);
    const ggbSecRef = useState(null);
    const ggbCotRef = useState(null);
    const functions = ["sin", "cos", "tan", "cosec", "sec", "cot"];
    const [showGraphCompare, setShowGraphCompare] = useState(false);
    const [showGraphSin, setShowGraphSin] = useState(false);
    const [showGraphCos, setShowGraphCos] = useState(false);
    const [showGraphFunc, setShowGraphFunc] = useState(true);
    const [showGraphTry, setShowGraphTry] = useState(true);
    const [showGraphTest, setShowGraphTest] = useState(true);
    const [showGraphRef, setShowGraphRef] = useState(true);
    const [showGraphTan, setShowGraphTan] = useState(false);
    const [showGraphCosec, setShowGraphCosec] = useState(false);
    const [show, setShow] = useState(false);
    const [showGraphSec, setShowGraphSec] = useState(false);
    const [showGraphCot, setShowGraphCot] = useState(false);
    const [graphAns, setGraphAns] = useState({
        a1: "", n1: "",
        range1st: "", range1ed: "",
        ampli1: "",
        a2: "", n2: "", prd: "",
        range2st: "", range2ed: "",
        ampli2: "",
    })
    const [answers, setAnswers] = useState({
        range1Start: "", range1End: "", amp1: "",
        range2Start: "", range2End: "", amp2: "",
        range3Start: "", range3End: "", amp3: "",
    })
    const correctAnswers = {
        range1Start: "-1", range1End: "1", amp1: "1",
        range2Start: "-2", range2End: "2", amp2: "2",
        range3Start: "-4", range3End: "4", amp3: "4",
    }
    const correctAns = {
        a1: "3", n1: "7",
        range1st: "-3", range1ed: "3",
        ampli1: "3",
        a2: "3", n2: "1/4", prd: "8",
        range2st: "-3", range2ed: "3",
        ampli2: "3",
    }
    const checkAnswer = (key) => {
        const userInput = parseFloat(answers[key]);
        const correct = parseFloat(correctAnswers[key]);
        return userInput === correct;
    };

    const handleCheck = (e) => {
        const { name, value } = e.target;
        setGraphAns((prev) => ({
            ...prev,
            [name]: value,
        }));
    };

    const inCorrect = (key) => {
        return graphAns[key] === correctAns[key];
    };

    const [ggbReady, setGgbReady] = useState(!!window.GGBApplet);

    useEffect(() => {
        if (window.GGBApplet) return; // เคยโหลดแล้ว
        const s = document.createElement("script");
        s.src = "https://www.geogebra.org/apps/deployggb.js";
        s.async = true;
        s.onload = () => setGgbReady(true);
        document.head.appendChild(s);
    }, []);

    const sinApiRef = useRef(null); // เก็บ API ของอินสแตนซ์นี้

    useEffect(() => {
        if (!ggbReady || !showGraphSin || sinApiRef.current) return;

        const app = new window.GGBApplet(
            {
                id: "appletSin",           // ชื่ออินสแตนซ์ JS (อย่าใช้ซ้ำกับ div)
                appName: "graphing",
                width: 400, height: 400,
                showToolBar: false,
                showMenuBar: false,
                showAlgebraInput: false,
                language: "th",
                appletOnLoad: (api) => {
                    sinApiRef.current = api; // เก็บอ็อบเจ็กต์ API ของกราฟนี้
                    api.evalCommand("f(x)=sin(x)");
                    api.setColor("f", 255, 0, 0);
                },
            },
            true
        );

        app.inject("ggb-sin"); // <div id="ggb-sin"></div> ต้องมีจริงใน DOM

        return () => { sinApiRef.current = null; };
    }, [ggbReady, showGraphSin]);


    const questions = [
        { id: 1, eq: "y = 5\\sin x" },
        { id: 2, eq: "y = \\frac{1}{2} \\sin x" },
        { id: 3, eq: "y = \\sin 8x" },
        { id: 4, eq: "y = \\sin \\frac{x}{3}" },
        { id: 5, eq: "y = 6\\cos \\frac{2}{x}" },
        { id: 6, eq: "y = \\frac{1}{2} \\cos \\frac{x}{3}" },
        { id: 7, eq: "y = 3\\cos x" },
        { id: 8, eq: "y = \\frac{1}{2} \\cos 4x" }
    ];

    const answerGraph = [
        { id: "ampl1", content: "5" },
        { id: "ampl2", content: "\\frac{1}{2}" },
        { id: "ampl3", content: "1" },
        { id: "ampl4", content: "6" },
        { id: "per1", content: "2\\pi" },
        { id: "per2", content: "6\\pi" },
        { id: "per3", content: "4\\pi" },
        { id: "per4", content: "\\frac{\\pi}{2}" },
    ];

    const correctGraphAns = {
        1: { amplitude: "ampl1", period: "per1" },    // 5, 2π
        2: { amplitude: "ampl2", period: "per1" },    // 1/2, 2π
        3: { amplitude: "ampl3", period: "per3" },    // 1, 4π
        4: { amplitude: "ampl3", period: "per2" },    // 1, 6π
        5: { amplitude: "ampl4", period: "per1" },    // 6, 2π (สมมุติ)
        6: { amplitude: "ampl2", period: "per2" },    // 1/2, 6π
        7: { amplitude: "ampl1", period: "per1" },    // 3, 2π (ปรับ id ให้ตรง)
        8: { amplitude: "ampl2", period: "per4" },    // 1/2, π/2
    };

    const [slots, setSlots] = useState(
        questions.map((q) => ({
            id: q.id,
            amplitude: null,
            period: null,
        }))
    );

    const onDragEnd = (result) => {
        const { destination, source, draggableId } = result;
        if (!destination) return;
        if (destination.droppableId === "answer-bank") {
            setSlots((prev) =>
                prev.map((slot) => {
                    if (slot.amplitude === draggableId) slot.amplitude = null;
                    if (slot.period === draggableId) slot.period = null;
                    return slot;
                })
            );
            return;
        }

        if (destination.droppableId.startsWith("amp")) {
            setSlots((prev) =>
                prev.map((slot) =>
                    `amp-${slot.id}` === destination.droppableId
                        ? { ...slot, amplitude: draggableId }
                        : slot
                )
            );
        }

        if (destination.droppableId.startsWith("per")) {
            setSlots((prev) =>
                prev.map((slot) =>
                    `per-${slot.id}` === destination.droppableId
                        ? { ...slot, period: draggableId }
                        : slot
                )
            );
        }
    };

    const checkGraphAns = () => {
        let score = 0;
        slots.forEach((slot) => {
            const correct = correctGraphAns[slot.id];
            if (
                slot.amplitude === correct.amplitude && slot.period === correct.period
            ) {
                score++;
            }
        });
        Swal.fire({
            title: "ผลคะแนนของคุณ",
            text: `คุณได้คะแนน ${score} / ${slots.length}`,
            icon: "success",
            confirmButtonText: "ปิด",
        })
    };

    const handleClick = (func) => {
        const element = document.getElementById(func);
        if (element) {
            element.scrollIntoView({ behavior: "smooth" });
        }
    }

    const handleChange = (e) => {
        setAnswers({
            ...answers, [e.target.name]: e.target.value,
        });
    };

    useEffect(() => {
        const handleScoll = () => {
            if (window.pageYOffset > 200) setShow(true);
            else setShow(false);
        };
        window.addEventListener("scroll", handleScoll);
        return () => window.removeEventListener("scroll", handleScoll);
    }, []);

    const scrollTotop = () => {
        window.scrollTo({ top: 0, behavior: "smooth" });
    };


    useEffect(() => {
        if (showGraphSin && !ggbSinRef.current) {
            const parameters = {
                id: "ggb-sin",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-sin");

            ggbSinRef.current = app;

            setTimeout(() => {
                if (window.ggbApplet) {
                    window.ggbApplet.evalCommand("f(x) = sin(x)");
                    window.ggbApplet.setColor("f", 255, 0, 0);
                }
            }, 1500);
        }
    }, [showGraphSin]);

    useEffect(() => {
        if (showGraphCos && !ggbCosRef.current) {
            const parameters = {
                id: "ggb-cos",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-cos");

            ggbCosRef.current = app;

            setTimeout(() => {
                if (window.ggbApplet) {
                    window.ggbApplet.evalCommand("g(x) = cos(x)");
                    window.ggbApplet.setColor("g", 0, 0, 255);
                }
            }, 1500);
        }
    }, [showGraphCos]);

    useEffect(() => {
        if (showGraphCompare && !ggbCompareRef.current) {
            const parameters = {
                id: "ggb-compare",
                appName: "Graphing",
                width: 800, height: 600,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-compare");

            ggbCompareRef.current = app;

            setTimeout(() => {
                if (window.ggbApplet) {
                    window.ggbApplet.evalCommand("f(x) = sin(x)");
                    window.ggbApplet.setColor("f", 255, 0, 0);
                    window.ggbApplet.evalCommand("g(x) = cos(x)");
                    window.ggbApplet.setColor("g", 0, 0, 255);
                }
            }, 1500);
        }
    }, [showGraphCompare]);

    useEffect(() => {
        if (showGraphFunc && !ggbFunctionRef.current) {
            const parameters = {
                id: "ggb-functions",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-functions");

            ggbFunctionRef.current = app;

            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = sin(x)");
                api.setColor("f", 255, 0, 0);
                api.evalCommand("t(x) = 2sin(x)");
                api.setColor("t", 0, 0, 255);
                api.evalCommand("w(x) = 3sin(x)");
                api.setColor("w", 255, 165, 0);
            }, 1500);
        }
    }, [showGraphFunc]);

    useEffect(() => {
        if (showGraphTry && !ggbTryRef.current) {
            const parameters = {
                id: "ggb-functiontry",
                appName: "Graphing",
                width: 400, height: 600,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-functiontry");

            ggbTryRef.current = app;
            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = sin(x)");
                api.setColor("f", 255, 0, 0);
                api.evalCommand("g(x) = 2sin(x + 1)");
                api.setColor("g", 0, 0, 255);
                api.evalCommand("h(x) = 4sin(x - 1)");
                api.setColor("h", 255, 165, 0);
            }, 1500);
        }
    }, [showGraphTry]);

    useEffect(() => {
        if (showGraphTest && !ggbTestref.current) {
            const parameters = {
                id: "ggb-test",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-test");

            ggbTestref.current = app;

            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = 4 * sin(2 * x)");
                api.setColor("f", 255, 0, 0);
            }, 1500);
        }
    }, [showGraphTest]);

    useEffect(() => {
        if (showGraphRef && !ggbGraphRef.current) {
            const parameters = {
                id: "ggb-graphR",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-graphR");

            ggbGraphRef.current = app;

            setTimeout(() => {
                if (window.ggbApplet) {
                    window.ggbApplet.evalCommand("f(x) = 2 * sin(3 * (x - pi / 6))");
                    window.ggbApplet.setColor("f", 0, 0, 255);
                    window.ggbApplet.evalCommand("g(x) = 2 sin(3x)");
                    window.ggbApplet.setColor("g", 255, 0, 0);

                }
            }, 1500);
        }
    }, [showGraphRef]);

    useEffect(() => {
        if (showGraphTan && !ggbTanRef.current) {
            const parameters = {
                id: "ggb-tan",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-tan");

            ggbTanRef.current = app;
            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = tan(x)");
                api.setColor("f", 255, 165, 0);
            }, 1500);
        }
    }, [showGraphTan]);

    useEffect(() => {
        if (showGraphCosec && !ggbCosecRef.current) {
            const parameters = {
                id: "ggb-cosec",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-cosec");

            ggbCosecRef.current = app;
            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = cosec(x)");
                api.setColor("f", 255, 0, 0);
            }, 1500);
        }
    }, [showGraphCosec]);

    useEffect(() => {
        if (showGraphSec && !ggbSecRef.current) {
            const parameters = {
                id: "ggb-sec",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-sec");

            ggbSecRef.current = app;
            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = sec(x)");
                api.setColor("f", 0, 0, 255);
            }, 1500);
        }
    }, [showGraphSec]);

    useEffect(() => {
        if (showGraphCot && !ggbCotRef.current) {
            const parameters = {
                id: "ggb-cot",
                appName: "Graphing",
                width: 400, height: 400,
                showToolBar: false,
                showAlgebraInput: false,
                showAlgebraView: false,
                showMenuBar: false,
                enableShiftDragZoom: true,
                language: "th",
            }
            const app = new window.GGBApplet(parameters, true);
            app.inject("ggb-cot");

            ggbCotRef.current = app;
            setTimeout(() => {
                const api = app.getAppletObject();
                api.evalCommand("f(x) = cot(x)");
                api.setColor("f", 60, 179, 113);
            }, 1500);
        }
    }, [showGraphCot]);

    useEffect(() => {
        window.scrollTo(0, 0); 
      }, []);
      
    return (
        <section className="flex flex-col min-h-screen w-full">
            <Sidebar />
            <div className="flex-1 rounded-md  p-6 pt-32 w-full overflow-y-auto">
                <div>
                    <div className="bg-[url('/images/bg-ai.png')] bg-cover bg-center rounded-tl-md rounded-tr-md p-7 text-white">
                        <h2 className="text-3xl font-bold mb-2">บทนิยาม</h2>
                    </div>
                    <hr className="border-gray-500" />
                    <div className="flex gap-2 ">
                        {functions.map((func) => (
                            <button key={func} onClick={() => handleClick(func)} className="btn">{func}</button>
                        ))}
                    </div>
                    <ScrollTop />
                    <hr className="border-gray-500" />
                    <div id="sin">
                        <p className="text-header">กราฟของ  y = sin x</p>
                    </div>
                    <div>
                        <div className="mb-5 content">
                            <p>
                                จากกราฟของ y = sin x จะมีรูปแบบที่ <span className="fw-bold text-primary">ซ้ำกันเรื่อยๆ</span> โดยจะ
                                <span className="fw-bold text-primary">แบ่งแกน x ออกเป็นช่วงที่เท่าๆกัน</span>
                                &nbsp;ช่วงที่กราฟเริ่มซ้ำเรียกว่า <span className="fw-bold text-danger">คาบ (period)</span> โดย <span className="fw-bold text-success">1 คาบมีความยาว 2&#x1D77F;</span> &nbsp;ซึ่งหมายถึง
                                <span>รูปคลื่น 2 ลูก (ขึ้น 1 ลง 1)</span> จะถือว่าเป็น 1 คาบ
                                ฟังก์ชันแบบนี้เรียกว่า <span className="fw-bold text-danger">ฟังก์ชันที่เป็นคาบ (periodic function)</span> เพราะมีรูปแบบเดิมซ้ำไปเรื่อยๆ &nbsp;กราฟของฟังก์ชันที่เป็นคลื่น จะมี<span className="text-primary">ค่าสูงสุด</span> และ<span className="text-pink-600">ค่าต่ำสุด</span> ระยะห่างจากจุดกึ่งกลางของกราฟไปถึงจุดสูงสุดหรือจุดต่ำสุดเรียกว่า <span className="fw-bold text-danger">แอมพลิจูด (amplitude)</span>
                            </p>
                            <div className="flex flex-col md:flex-row gap-8 md-gap-8 justify-center py-2">
                                <p>คลื่นสูงมาก = แอมพลิจูดมาก <br /> คลื่นเตี้ย = แอมพลิจูดน้อย</p>
                                <p className="mathtext">แอมพลิจูดของฟังก์ชันที่เป็นคาบเท่ากับ <span className="inline-block ml-6"><InlineMath math="\frac{\text{ค่าสูงสุด} - \text{ค่าต่ำสุด}}{2}" /></span></p>
                            </div>
                            <div className="flex flex-col md:flex-row items-start gap-4">
                                <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                                    {!showGraphSin && (
                                        <button onClick={() => setShowGraphSin(true)}>ดูกราฟ Sin</button>
                                    )}
                                    {showGraphSin && <div id="ggb-sin" />}
                                </div>
                                <div className="md:w-1/2  flex items-center justify-center px-4 text-center md:px-0 md:h-[400px]">
                                    จากกราฟจะเห็นว่าเป็นช่วงที่มีความยาว 2&pi; เท่ากัน และกราฟบนช่วงมีลักษณะเหมือนกัน เมื่อพิจารณาจะเห็นว่า กราฟของฟังก์ชันสูงสุดเท่ากับ 1 และต่ำสุดเท่ากับ -1
                                    ดังนั้นฟังก์ชัน y = sin x มีแอมพลิจูดเท่ากับ 1
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr className="border-gray-500" />
                <div className="mb-5 content" id="cos">
                    <p className="text-header">กราฟของ y = cos x</p>
                    จาก cos(2n&#x1D77F; + α) = cos α เมื่อ n เป็นจำนวนเต็ม จะได้กราฟของฟังก์ชันโคไซน์
                    <div className="flex flex-col md:flex-row items-start gap-4">
                        <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                            {!showGraphCos && (
                                <button onClick={() => setShowGraphCos(true)}>ดูกราฟ Cos</button>
                            )}
                            {showGraphCos && <div id="ggb-cos" />}
                        </div>
                        <div className="md:w-1/2  flex items-center justify-center px-4 text-center md:px-0 md:h-[400px]">
                            จากกราฟจะเห็นว่าเป็นช่วงที่มีความยาว 2&#x1D77F; เท่ากัน และกราฟบนช่วงมีลักษณะเหมือนกัน เมื่อพิจารณาจะเห็นว่า กราฟของฟังก์ชันสูงสุดเท่ากับ 1 และต่ำสุดเท่ากับ -1
                            ดังนั้นฟังก์ชัน y = cos x มีแอมพลิจูดเท่ากับ 1
                        </div>
                    </div>
                </div>
                <hr className="border-gray-500" />
                <div className="text-center my-6">
                    <h3 className="mb-4">เปรียบเทียบกราฟ sin(x) และ cos(x)</h3>

                    <div className="flex items-center justify-center">
                        <div>
                            {!showGraphCompare && (
                                <button
                                    onClick={() => setShowGraphCompare(true)}
                                    className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 button-graph"
                                >
                                    ดูกราฟเปรียบเทียบ
                                </button>
                            )}

                            {showGraphCompare && (
                                <div className="flex justify-center mt-6">
                                    <div id="ggb-compare" className="w-full max-w-[800px] h-[400px]" />
                                </div>
                            )}
                        </div>
                    </div>
                </div>
                <div className="mb-5 content">
                    <div className="flex flex-col md:flex-row items-start gap-4">
                        <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                            {!showGraphFunc && (
                                <button onClick={() => setShowGraphFunc(true)}>ดูกราฟฟังก์ชัน</button>
                            )}
                            {<div id="ggb-functions" />}
                        </div>
                        <div className="md:w-1/2  flex flex-col items-center justify-center px-4 text-center md:px-0  mt-4 md:mt-0">
                            <p className="mb-4">
                                เขียนกราฟของ y = sin x และ y = 2 sin x  และ y = 3 sin x บนระบบพิกัดฉากเดียวกัน เมื่อ -2&#x1D77F; ≤ x ≤ 2&#x1D77F; พร้อมทั้งหา เรนจ์ คาบ และแอมพลิจูด
                            </p> <span className="text-danger">ตัวอย่าง</span>

                            <table className="table-fixed w-full border-collapse border border-gray-400 text-[15px]">
                                <thead className="bg-gray-100">
                                    <tr className="text-center">
                                        <td className="border px-2 py-1">ฟังก์ชัน</td>
                                        <td className="border px-2 py-1">เรนจ์</td>
                                        <td className="border px-2 py-1">คาบ</td>
                                        <td className="border px-2 py-1">แอมพลิจูด</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr className="text-center">
                                        <td className="table-two px-2 py-1">sin x</td>
                                        <td className="border px-2 py-1">[-1, 1]</td>
                                        <td className="border px-2 py-1">2&#x1D77F;</td>
                                        <td className="border px-2 py-1"><InlineMath math="\frac{1 - (-1)}{2} = 1" /></td>
                                    </tr>
                                    <tr className="text-center">
                                        <td className="table-three border px-2 py-1">2 sin x</td>
                                        <td className="border px-2 py-1">[-2, 2]</td>
                                        <td className="border px-2 py-1">2&#x1D77F;</td>
                                        <td className="border px-2 py-1"><InlineMath math="\frac{2 - (-2)}{2} = 2" /></td>
                                    </tr>
                                    <tr className="text-center">
                                        <td className="table-four border px-2 py-1">3 sin x</td>
                                        <td className="border px-2 py-1">[-3, 3]</td>
                                        <td className="border px-2 py-1">2&#x1D77F;</td>
                                        <td className="border px-2 py-1"><InlineMath math="\frac{3 - (-3)}{2} = 3" /></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <hr className="border-gray-500" />
                <div className="mt-5 content max-w-screen">
                    <h3 className="mb-4 text-center">ลองทำดู!!</h3>
                    <div className="flex flex-col md:flex-row items-start gap-4">
                        <div className="grapGeo md:w-1/2 h-[600px] flex justify-center items-center p-2 graphsin">
                            {!showGraphTry && (
                                <button onClick={() => setShowGraphTry(true)}>ดูกราฟฟังก์ชัน</button>
                            )}
                            {<div id="ggb-functiontry" />}
                        </div>
                        <div className="md:w-1/2  flex flex-col items-center justify-center px-4 text-center md:px-0  mt-4 md:mt-0">
                            <p className="mb-4">
                                เขียนกราฟของ y = sin x และ y = 2 sin x  และ y = 3 sin x บนระบบพิกัดฉากเดียวกัน เมื่อ -2&#x1D77F; ≤ x ≤ 2&#x1D77F; พร้อมทั้งหา เรนจ์ คาบ และแอมพลิจูด
                            </p>
                            <table className="table-auto border-collapse border border-gray-400 text-[15px]">
                                <thead className="bg-gray-100">
                                    <tr className="text-center">
                                        <td className="border px-2 py-1">ฟังก์ชัน</td>
                                        <td className="border px-2 py-1">เรนจ์</td>
                                        <td className="border px-2 py-1">คาบ</td>
                                        <td className="border px-2 py-1">แอมพลิจูด</td>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr className="text-center">
                                        <td className="table-two border px-2 py-1">sin x</td>
                                        <td className="border px-2 py-1"><span>[</span>
                                            <input type="text" name="range1Start" onChange={handleChange} value={answers.range1Start} className={`w-[50px] border px-1 py-1 text-center font-bold ${checkAnswer("range1Start") ? "text-green-700" : "text-red-600"}`} /><span>,</span>
                                            <input type="text" name="range1End" onChange={handleChange} value={answers.range1End} className={`w-[50px] border px-1 py-1 text-center font-bold ${checkAnswer("range1End") ? "text-green-700" : "text-red-600"}`} /><span>]</span>
                                        </td>
                                        <td className="border px-2 py-1">2&#x1D77F;</td>
                                        <td className="border px-2 py-1"><input type="text" name="amp1" onChange={handleChange} value={answers.amp1} placeholder="แอมพลิจูด" className={`w-full border px-1 py-1 text-center font-bold ${checkAnswer("amp1") ? "text-green-700" : "text-red-600"}`} /></td>
                                    </tr>
                                    <tr className="text-center">
                                        <td className="table-three border px-2 py-1 "><InlineMath math="2\sin(x+1)" /></td>
                                        <td className="border px-2 py-1"><span>[</span>
                                            <input type="text" name="range2Start" onChange={handleChange} value={answers.range2Start} className={`w-[50px] border px-1 py-1 text-center font-bold ${checkAnswer("range2Start") ? "text-green-700" : "text-red-600"}`} /><span>,</span>
                                            <input type="text" name="range2End" onChange={handleChange} value={answers.range2End} className={`w-[50px] border px-1 py-1 text-center font-bold ${checkAnswer("range2End") ? "text-green-700" : "text-red-600"}`} /><span>]</span>
                                        </td>
                                        <td className="border px-2 py-1">2&#x1D77F;</td>
                                        <td className="border px-2 py-1"><input type="text" name="amp2" onChange={handleChange} value={answers.amp2} placeholder="แอมพลิจูด" className={`w-full border px-1 py-1 text-center  font-bold ${checkAnswer("amp2") ? "text-green-700" : "text-red-600"}`} /></td>
                                    </tr>
                                    <tr className="text-center">
                                        <td className="table-four border px-2 py-1"><InlineMath math="4\sin(x - 1)" /></td>
                                        <td className="border px-2 py-1"><span>[</span>
                                            <input type="text" name="range3Start" onChange={handleChange} value={answers.range3Start} className={`w-[50px] border px-1 py-1 text-center font-bold ${checkAnswer("range3Start") ? "text-green-700" : "text-red-600"}`} /><span>,</span>
                                            <input type="text" name="range3End" onChange={handleChange} value={answers.range3End} className={`w-[50px] border px-1 py-1 text-center font-bold ${checkAnswer("range3End") ? "text-green-700" : "text-red-600"}`} /><span>]</span>
                                        </td>
                                        <td className="border px-2 py-1">2&#x1D77F;</td>
                                        <td className="border px-2 py-1"><input type="text" name="amp3" onChange={handleChange} value={answers.amp3} placeholder="แอมพลิจูด" className={`w-full border px-1 py-1 text-center font-bold ${checkAnswer("amp3") ? "text-green-700" : "text-red-600"}`} /></td>
                                    </tr>
                                    <tr>
                                        <td rowSpan={4} colSpan={4}>
                                            ช่องกรอกที่มีคำตอบถูกต้องจะแสดงตัวหนังสือ <span className="text-green-600 font-bold">สีเขียว</span> คำตอบผิดจะแสดง <span className="text-red-600 font-bold">สีแดง</span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div>
                    <p className="mt-8 text-center text-[25px] font-bold text-blue-800">การหาเรนจ์ คาบ และแอมพลิจูดของฟังก์ชันไซน์ในรูปทั่วไป</p>
                    <div>
                        <p className="text-[18px]"><span className="text-red-700 font-bold">ตัวอย่าง</span> เขียนกราฟของ y = 4 sin 2x เมื่อ -2&#x1D77F; ≤ x ≤ 2&#x1D77F; พร้อมทั้งหาเรนจ์ คาบ และแอมพลิจูด</p>
                        <div className="content">
                            <div className="flex flex-col md:flex-row items-start gap-4">
                                <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center graphsin">
                                    {!showGraphTest && (
                                        <button onClick={() => setShowGraphTest(true)}>ดูกราฟ</button>
                                    )}
                                    {showGraphTest && <div id="ggb-test" />}
                                </div>
                                <div className="md:w-1/2 flex flex-col items-start justify-center gap-2 px-4 md:px-0 md:h-[400px]">
                                    <div>จาก y = 4 sin 2x จะได้ว่า a = 4 และ n = 2 ดังนั้น</div>
                                    <div>
                                        <span className="text-green-700 font-bold">เรนจ์</span>ของฟังก์ชันเท่ากับ [-|a|, |a|] = <span className="text-primary">[-4,4]</span>
                                    </div>
                                    <div className="flex flex-wrap items-center gap-1">
                                        <span className="text-green-700 font-bold">คาบ</span>ของฟังก์ชันเท่ากับ
                                        <InlineMath math="\frac{2\pi}{n}" />
                                        <span>=</span>
                                        <InlineMath math="\frac{2\pi}{2}" />
                                        <span>=</span>
                                        <InlineMath math="\pi" />
                                    </div>
                                    <div>
                                        <span className="text-green-700 font-bold">แอมพลิจูด</span>ของฟังก์ชันเท่ากับ |a| = |4| = 4
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="mt-[5%] font-bold text-[20px] text-red-700">
                    <p className="graph-learn inline-block px-3">ให้หาเรนจ์ คาบ และแอมพลิจูดของ y = 8 sin 6x</p>
                    <div className="flex justify-center items-center w-full pb-[3%]">
                        <iframe
                            src="https://www.geogebra.org/classic" width="1200" height="500"
                            style={{ border: "none", borderRadius: 8 }} title="GeoGebra Classic" allowFullScreen />
                    </div>
                </div>
                <div className="flex flex-wrap justify-center items-center mx-auto max-w-6xl gap-4">
                    <div className="quizz-01 text-[17px] flex flex-col gap-3 w-full md:w-auto max-w-md">
                        <p>ให้หาเรนจ์ คาบ และแอมพลิจูดของ <InlineMath math={"y = 3 \\sin {7x}"} /></p>
                        <div>จาก <InlineMath math={"y = 3 \\sin {7x}"} />
                            &nbsp;จะได้ว่า a = <input type="text" name="a1" onChange={handleCheck} value={graphAns.a1} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.a1 ? inCorrect("a1") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} />
                            และ  n = <input type="text" name="n1" onChange={handleCheck} value={graphAns.n1} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.n1 ? inCorrect("n1") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /> </div>
                        <div><span className="font-bold text-primary">เรนจ์</span>ของฟังก์ชันเท่ากับ [-|a|, |a|] =
                            <span>[</span><input type="text" name="range1st" onChange={handleCheck} value={graphAns.range1st} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.range1st ? inCorrect("range1st") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} />
                            <span>,</span><input type="text" name="range1ed" onChange={handleCheck} value={graphAns.range1ed} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.range1ed ? inCorrect("range1ed") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /> <span>]</span></div>
                        <div><span className="font-bold text-primary">คาบ</span>ของฟังก์ชันเท่ากับ  &nbsp; <InlineMath math={"\\frac{2\\pi}{n}"} />&nbsp; = &nbsp;<InlineMath math={"\\frac{2\\pi}{7}"} />&nbsp;=&nbsp;<InlineMath math={"\\frac{2\\pi}{7}"} /></div>
                        <div><span className="font-bold text-primary">แอมพลิจูด</span>ของฟังก์ชันเท่ากับ |a| =
                            <input type="text" name="ampli1" onChange={handleCheck} value={graphAns.ampli1} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.ampli1 ? inCorrect("ampli1") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /> </div>
                    </div>
                    <div className="quizz-01 text-[17px] flex flex-col gap-3 w-full md:w-auto max-w-md">
                        <p>ให้หาเรนจ์ คาบ และแอมพลิจูดของ <InlineMath math={"y = 3 \\sin\\left(\\frac{x}{4}\\right)"} /></p>
                        <div>จาก <InlineMath math={"y = 3 \\sin\\left(\\frac{x}{4}\\right)"} />
                            &nbsp;จะได้ว่า a = <input type="text" name="a2" onChange={handleCheck} value={graphAns.a2} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.a2 ? inCorrect("a2") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} />
                            และ  n = <input type="text" name="n2" onChange={handleCheck} value={graphAns.n2} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.n2 ? inCorrect("n2") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /> </div>
                        <div><span className="font-bold text-primary">เรนจ์</span>ของฟังก์ชันเท่ากับ [-|a|, |a|] =
                            <span>[</span><input type="text" name="range2st" onChange={handleCheck} value={graphAns.range2st} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.range2st ? inCorrect("range2st") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} />
                            <span>,</span><input type="text" name="range2ed" onChange={handleCheck} value={graphAns.range2ed} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.range2ed ? inCorrect("range2ed") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /> <span>]</span></div>
                        <div><span className="font-bold text-primary">คาบ</span>ของฟังก์ชันเท่ากับ  &nbsp; <InlineMath math={"\\frac{2\\pi}{n}"} />&nbsp; = &nbsp;<InlineMath math={"\\frac{2\\pi}{\\frac{1}{4}}"} />&nbsp;=&nbsp;
                            <input type="text" name="prd" onChange={handleCheck} value={graphAns.prd} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.prd ? inCorrect("prd") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /><InlineMath math={"\\pi"} /></div>
                        <div><span className="font-bold text-primary">แอมพลิจูด</span>ของฟังก์ชันเท่ากับ |a| =
                            <input type="text" name="ampli2" onChange={handleCheck} value={graphAns.ampli2} className={`w-[50px] border px-1 py-1 text-center font-bold ${graphAns.ampli2 ? inCorrect("ampli2") ? "text-green-700" : "text-red-600" : "border-gray-300"}`} /> </div>
                    </div>
                </div>
                <div>
                    <div className="py-4 text-[20px] text-center">
                        การเขียนกราฟของฟังก์ชันตรีโกณมิติบางฟังก์ชันอาจต้องใช้ความรู้ เรื่อง <span className="font-bold text-primary">การเลื่อนขนาน</span> โดยใช้ในการเลื่อนขนานกราฟรูปมาตรฐานใน<span className="text-success font-bold">แนวแกนนอน</span>หรือ<span className="font-bold text-success">แนวแกนตั้ง</span>
                    </div>
                    <div className="mb-5 content">
                        <div className="flex flex-col md:flex-row items-start gap-4">
                            <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                                {!showGraphRef && (
                                    <button onClick={() => setShowGraphRef(true)}>ดูกราฟ Cos</button>
                                )}
                                {showGraphRef && <div id="ggb-graphR" />}
                            </div>
                            <div className="md:w-1/2  flex items-center justify-center px-4  md:px-0 md:h-[400px]">
                                <div style={{ whiteSpace: "nowrap" }}>
                                    <div><span><span className="text-danger font-bold">ตัวอย่าง</span>&nbsp;กราฟของ <InlineMath math={"y = 2 \\sin 3\\left(x - \\frac{\\pi}{6}\\right)"} /></span></div>
                                    <div><p>เนื่องจากกราฟเป็นกราฟที่เกิดจากการ<span className="font-bold text-primary">เลื่อนขนาน</span> ของกราฟ <br /> y = 2 sin 3x <span className="font-bold text-success">ไปทางขวา</span> <InlineMath math={"\\frac{\\pi}{6}"} /> หน่วย</p></div>
                                    <div className="text-primary">จึงมีขั้นตอน ดังนี้</div>
                                    <div><span>ขั้นที่ 1</span> เขียนกราฟของ y = 2 sin 3x</div>
                                    <div><span>ขั้นที่ 2</span> เลื่อนกราฟของ y = 2 sin 3x <span className="font-bold text-success">ไปทางขวา</span> <InlineMath math={"\\frac{\\pi}{6}"} /> จะได้กราฟ <InlineMath math={"y = 2 \\sin 3\\left(x - \\frac{\\pi}{6}\\right)"} /></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="tan">
                    <div className="text-header">กราฟของ  y = tan x</div>
                    <p className="text-[17px]">พิจารณาของ y = tan x เมื่อ <InlineMath math={"-\\frac{\\pi}{2} < x < \\frac{\\pi}{2}"} /></p>
                    <div className="mb-5 content">
                        <div className="flex flex-col md:flex-row items-start gap-4">
                            <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                                {!showGraphTan && (
                                    <button onClick={() => setShowGraphTan(true)}>ดูกราฟ Tan</button>
                                )}
                                {showGraphTan && <div id="ggb-tan" />}
                            </div>
                            <div className="md:w-1/2  flex items-center justify-center px-4  md:px-0 md:h-[400px]">
                                <div>
                                    <div>กราฟของฟังก์ชันแทนเจนต์ เส้นตรง <InlineMath math={"x = -\\frac{\\pi}{2}"} /> และ <InlineMath math={"x = \\frac{\\pi}{2}"} /> ไม่ใช่สมาชิกของโดเมนของ y = tan x และเส้นกราฟจะโค้งเข้าหาเส้นตรง</div>
                                    <div><span className="text-primary">เมื่อพิจารณากราฟ</span>เป็นช่วงย่อยจะเห็นว่า กราฟของฟังก์ชันแต่ละช่วงย่อยมีลักษณะเหมือนกัน <span className="text-danger">ช่วงย่อยมีความยาวเท่ากับ </span><InlineMath math={"\\pi"} /></div>
                                    <div>ฟังก์ชันแทนเจนต์เป็น<span className="text-success">ฟังก์ชันที่เป็นคาบ</span> มีคาบเท่ากับ <InlineMath math={"\\pi"} /></div>
                                    <div>กราฟในแต่ละคาบ<span className="text-danger">ไม่มีค่าต่ำสุด</span>และ<span className="text-danger">ค่าสูงสุด</span>ดังนั้น<span>ไม่มีแอมพลิจูด</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="text-[20px] text-center content-text"><span className="text-primary">กราฟฟังก์ชันโคเซแคนต์ <span className="text-success">ฟังก์ชันเซแคนต์</span> <span className="text-black">และ</span><span className="text-danger">ฟังก์ชันโคแทนเจนต์</span></span> ทั้ง 3 ฟังก์ชัน เป็นส่วนกลับของ <span className="text-primary">ฟังก์ชันไซน์</span> <span className="text-success">ฟังชันโคไซน์</span> และ<span className="text-danger">ฟังก์ชันแทนเจนต์ </span> ตามลำดับ</div>
                <div id="cosec" className="mt-5">
                    <div className="text-header">กราฟของ  y = cosec x</div>
                    <p className="text-[17px]">พิจารณากราฟของ y = cosec x</p>
                    <div className="mb-5 content">
                        <div className="flex flex-col md:flex-row items-start gap-4">
                            <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                                {!showGraphCosec && (
                                    <button onClick={() => setShowGraphCosec(true)}>ดูกราฟ Cosec</button>
                                )}
                                {showGraphCosec && <div id="ggb-cosec" />}
                            </div>
                            <div className="md:w-1/2  flex items-center justify-center px-4  md:px-0 md:h-[400px]">
                                <div>
                                    <div>จากกราฟ จะเห็นว่า ค่าของฟังก์ชันโคเซแคนต์เป็นจำนวนจริงทุกจำนวน<span className="text-danger">ยกเว้นค่าระหว่าง -1 กับ 1</span></div>
                                    <div><span className="text-primary">เรนจ์</span>ของฟังก์ชันโคเซแคนต์ คือ <InlineMath math={"(-\\infty, -1) \\cup (1, \\infty)"} /></div>
                                    <div>ฟังก์ชันโคเซแทนต์<span className="text-success">เป็นฟังก์ชันที่เป็นคาบ</span> และมีคาบเท่ากับ <InlineMath math={"2\\pi"} /></div>
                                    <div>ฟังก์ชันโคเซแทนต์<span className="text-danger">ไม่มีค่าสูงสุด</span>และ<span className="text-danger">ค่าต่ำสุด</span>จึง<span className="text-danger">ไม่มีแอมพลิจูด</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="sec">
                    <div className="text-header">กราฟของ  y = sec x</div>
                    <p className="text-[17px]">พิจารณากราฟของ y = sec x</p>
                    <div className="mb-5 content">
                        <div className="flex flex-col md:flex-row items-start gap-4">
                            <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                                {!showGraphSec && (
                                    <button onClick={() => setShowGraphSec(true)}>ดูกราฟ Sec</button>
                                )}
                                {showGraphSec && <div id="ggb-sec" />}
                            </div>
                            <div className="md:w-1/2  flex items-center justify-center px-4  md:px-0 md:h-[400px]">
                                <div>
                                    <div>จากกราฟ จะเห็นว่า ค่าของฟังก์ชันเซแคนต์เป็นจำนวนจริงทุกจำนวน<span className="text-danger">ยกเว้นค่าระหว่าง -1 กับ 1</span></div>
                                    <div><span className="text-primary">เรนจ์</span>ของฟังก์ชันเซแคนต์ คือ <InlineMath math={"(-\\infty, -1) \\cup (1, \\infty)"} /></div>
                                    <div>ฟังก์ชันเซแคนต์<span className="text-success">เป็นฟังก์ชันที่เป็นคาบ</span> และมีคาบเท่ากับ <InlineMath math={"2\\pi"} /></div>
                                    <div>ฟังก์ชันเซแคนต์<span className="text-danger">ไม่มีค่าสูงสุด</span>และ<span className="text-danger">ค่าต่ำสุด</span>จึง<span className="text-danger">ไม่มีแอมพลิจูด</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="cot">
                    <div className="text-header">กราฟของ  y = cot x</div>
                    <p className="text-[17px]">พิจารณากราฟของ y = cot x</p>
                    <div className="mb-5 content">
                        <div className="flex flex-col md:flex-row items-start gap-4">
                            <div className="grapGeo md:w-1/2 h-[400px] flex justify-center items-center p-2 graphsin">
                                {!showGraphCot && (
                                    <button onClick={() => setShowGraphCot(true)}>ดูกราฟ Cot</button>
                                )}
                                {showGraphCot && <div id="ggb-cot" />}
                            </div>
                            <div className="md:w-1/2  flex items-center justify-center px-4  md:px-0 md:h-[400px]">
                                <div>
                                    <div>จากกราฟ จะเห็นว่า ค่าของฟังก์ชันโคแทนเจนต์</div>
                                    <div><span className="text-success">เป็นฟังก์ชันที่เป็นคาบ</span> และมีคาบเท่ากับ <InlineMath math={"2\\pi"} /></div>
                                    <div>ฟังก์ชันโคแทนเจนต์<span className="text-danger">ไม่มีค่าสูงสุด</span>และ<span className="text-danger">ค่าต่ำสุด</span>จึง<span className="text-danger">ไม่มีแอมพลิจูด</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div className="p-4">
                    <p className="text-center text-[25px] text-blue-800">หาคาบและแอมพลิจูดของฟังก์ชัน</p>
                    <DragDropContext onDragEnd={onDragEnd}>
                        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
                            {questions.map((q) => (
                                <div key={q.id} className="border p-3 rounded-lg shadow text-center">
                                    <InlineMath math={q.eq} />
                                    <div className="flex gap-4 mt-4 justify-center items-center">
                                        <Droppable droppableId={`amp-${q.id}`}>
                                            {(provided) => {
                                                const slot = slots.find((s) => s.id === q.id);
                                                const ampAnswer = answerGraph.find((a) => a.id === slot.amplitude);
                                                return (
                                                    <div ref={provided.innerRef}
                                                        {...provided.droppableProps}
                                                        className="w-28 h-12 border border-dashed flex items-center justify-center text-gray-500">
                                                        {ampAnswer ? <InlineMath math={ampAnswer.content} /> : "แอมพลิจูด"}
                                                        {provided.placeholder}
                                                    </div>
                                                );
                                            }}
                                        </Droppable>

                                        <Droppable droppableId={`per-${q.id}`}>
                                            {(provided) => {
                                                const slot = slots.find((s) => s.id === q.id);
                                                const perAnswer = answerGraph.find((a) => a.id === slot.period);
                                                return (
                                                    <div ref={provided.innerRef}
                                                        {...provided.droppableProps}
                                                        className="w-28 h-12 border border-dashed flex items-center justify-center text-gray-500">
                                                        {perAnswer ? <InlineMath math={perAnswer.content} /> : "คาบ"}
                                                        {provided.placeholder}
                                                    </div>
                                                );
                                            }}
                                        </Droppable>
                                    </div>
                                </div>
                            ))}
                        </div>
                        <Droppable droppableId="answer-bank" direction="horizontal">
                            {(provided) => (
                                <div
                                    ref={provided.innerRef}
                                    {...provided.droppableProps}
                                    className="flex flex-wrap justify-center gap-6">
                                    {answerGraph.map((a, index) => (
                                        <Draggable key={String(a.id)} draggableId={String(a.id)} index={index}>
                                            {(provided) => (
                                                <div
                                                    className="p-3 bg-blue-300 rounded cursor-pointer text-center min-w-[80px]"
                                                    ref={provided.innerRef}
                                                    {...provided.draggableProps}
                                                    {...provided.dragHandleProps}>
                                                    <InlineMath math={a.content} />
                                                </div>
                                            )}
                                        </Draggable>
                                    ))}
                                    {provided.placeholder}
                                </div>
                            )}
                        </Droppable>
                    </DragDropContext>
                    <div className="flex justify-center mt-6">
                        <button onClick={checkGraphAns} className="p-3 bg-green-500 text-white rounded font-bold">ตรวจคำตอบ</button>
                    </div>
                </div>
                <hr className="text-blue-500" />
            </div>
            <Footer />
        </section>
    )
}

export default Knowledge06;